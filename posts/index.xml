<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 许 文 的 小 站</title>
    <link>https://shilaAtGit.github.io.git/posts/</link>
    <description>Recent content in Posts on 许 文 的 小 站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Tue, 18 Jun 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://shilaAtGit.github.io.git/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>学习使用MarkDown笔记</title>
      <link>https://shilaAtGit.github.io.git/posts/studymarkdown/</link>
      <pubDate>Tue, 18 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://shilaAtGit.github.io.git/posts/studymarkdown/</guid>
      <description>写一篇笔记，记录markdown的编写办法，以便遗忘时复阅。注：文中资源、命令有时限性，需要依时更新之。&#xA;开篇语&#xA;markdwon是一种暂时流行的文本编辑方式，本文也是用这个格式进行编写的。&#xA;优点是语法简单，可以比较容易的翻译成为HTML文档进行网页展示，所以用来写个人的blog非常方便。&#xA;hugo也是用md文档来生成网页的。&#xA;图片语法&#xA;基础的图片嵌入：&#xA;使用Shortcodes，可以设置图片的一些属性&#xA;链接语法&#xA;参考shortcodes 。 常用参考:&#xA;使用 Markdown 制作 ppt&#xA;使用mermaid为Markdown增加表格&#xA;粗体&#xA;通过用**包含，进行粗体。&#xA;斜体&#xA;通过用*包含，进行斜体。&#xA;标题&#xA;一级标题用#开头。&#xA;二级标题用##开头，二级标题会生成目录，一级不会。&#xA;代码块&#xA;分别用&amp;quot;```&amp;ldquo;首位包含的会展示位代码块。&#xA;如何使用图表&#xA;图表的使用必须使用插件，通过md的插件实现各种功能。我使用mermaid来实现饼图的展示。&#xA;1、在项目的layouts路径下新建/partials/mermaid.html文件，内容如下：&#xA;{{ if .Params.mermaid }} &amp;lt;script src=&amp;#34;/js/mermaid.min.js&amp;#34; integrity=&amp;#34;sha256-KqisLh8jVMBRjpNkOhH5W9VWs+F6x6vQksLqxs7+x9A=&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34; &amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; // Replace mermaid pre.code to div Array.from(document.getElementsByClassName(&amp;#34;language-mermaid&amp;#34;)).forEach( (el) =&amp;gt; { el.parentElement.outerHTML = `&amp;lt;div class=&amp;#34;mermaid&amp;#34;&amp;gt;${el.innerText}&amp;lt;/div&amp;gt;`; } ); &amp;lt;/script&amp;gt; &amp;lt;style&amp;gt; /* Set svg to center */ .mermaid svg { display: block; margin: auto; } &amp;lt;/style&amp;gt; {{ end }} 2、在同级目录下放入mermaid.</description>
    </item>
    <item>
      <title>学习使用hugo笔记</title>
      <link>https://shilaAtGit.github.io.git/posts/studyhugo/</link>
      <pubDate>Mon, 08 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://shilaAtGit.github.io.git/posts/studyhugo/</guid>
      <description>写一篇笔记，记录hugo的学习过程，以便遗忘时复阅。注：文中资源、命令有时限性，需要依时更新之。&#xA;开篇语&#xA;hugo是基于go语言的快速搭建网站的框架，然而实现目标——搭建网站——却不需要有任何go语言的学习过程。&#xA;需要的能力是：下载能力，命令行输入命令能力，阅读Doc能力，这些基础能力具备后，只要会写MD格式的网站内容文件就可以了。&#xA;因此，hugo是搭建个人网站最优的方案，因为即使是code大神——为了记录信息才是核心目标，也完全没必要自己去费时建设。&#xA;hugo主页：hugo&#xA;准备工作：&#xA;安装git（本来就有）&#xA;安装brew（很久以前的工具，无法升级，为了修复它话费了大量的时间）&#xA;安装hugo（有了brew一切都很容易）&#xA;第一步：修复homebrew&#xA;1、输入brew update报错，尝试各种百度方法，最后卡在提示ruby版本与操作系统不符合，表现为更新ruby失败，手动更新后提示操作系统版本旧。因为我无法升级操作系统，所以困住于此。&#xA;2、使用如下方法，修复&#xA;命令： /bin/zsh -c “$(-fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)”&#xA;命令会引导命令终端进入交互模式，都选1-中科大镜像，即可。 完成brew的完整安装后，输入brew update进行升级。&#xA;第二步：安装go&#xA;go有自己的可视化安装包，下载并安装即可。&#xA;第三步：安装hugo&#xA;命令：brew install hugo&#xA;参考安装hugo&#xA;第四步：生成项目并启动服务&#xA;hugo new site quickstart //建立一个叫做quickstart的项目，可以用任意名称&#xA;cd quickstart //进入项目根目录&#xA;git init //初始化git&#xA;git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke //下载ananke theme&#xA;echo &amp;ldquo;theme = &amp;lsquo;ananke&amp;rsquo;&amp;rdquo; &amp;raquo; hugo.toml //启用theme&#xA;hugo server //启动服务，日志输出中会显示服务地址http://localhost:1313 操作非常简单，至此就完成了整个网站的建设。具体可以参考官网搭建hogo项目&#xA;第五步：更换喜欢的theme&#xA;hugo提供很多的theme，可以根据目标选择。参考themes&#xA;1、下载theme，并放到项目的themes目录下，参考语句：git clone https://github.com/vimux/mainroad.git themes/mainroad&#xA;2、更新hugo.toml，在项目根目录找到 theme = &amp;lsquo;ananke&amp;rsquo;，修改为theme = &amp;lsquo;mainroad&amp;rsquo;</description>
    </item>
    <item>
      <title>我的第一个hugo blog</title>
      <link>https://shilaAtGit.github.io.git/posts/first/</link>
      <pubDate>Sat, 15 Feb 2014 00:00:00 +0000</pubDate>
      <guid>https://shilaAtGit.github.io.git/posts/first/</guid>
      <description>学习使用新技术重新搭建个人blog，迁移存量内容到新技术下。</description>
    </item>
  </channel>
</rss>
