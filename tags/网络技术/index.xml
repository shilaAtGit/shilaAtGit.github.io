<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>网络技术 on 许 文 的 小 站</title>
    <link>https://shilaAtGit.github.io.git/tags/%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 网络技术 on 许 文 的 小 站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Wed, 28 Feb 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://shilaAtGit.github.io.git/tags/%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>学习theme-mainroad的记录</title>
      <link>https://shilaAtGit.github.io.git/bolg/studytheme/</link>
      <pubDate>Wed, 28 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://shilaAtGit.github.io.git/bolg/studytheme/</guid>
      <description>记录一下学习theme的过程，先学习的是自己使用的mainroad。&#xA;mainroad是hugo的众多theme中的一个，比较适合简单使用，写自己的blog。&#xA;首先，先贴一下hugo的主页：&#xA;hugo主页&#xA;从hugo主页的菜单themes主页进入，可以选择自己喜欢的theme，每个theme都有详细的自己的下载、使用教程。使用教程的主要内容为config和front matter。&#xA;其中，对于config的配置，新版本的hugo已经放到了hugo.toml中，不在放在config下，也可以自己新建config目录和config.toml文件存放，但是没啥必要。&#xA;theme主要的定制能力，都体现在front matter上。front matter的定义，是一个theme的样式。比如在我的所有md文档中，都要复制mainroad提供的frontmatter到文件头。&#xA;front matter的内容提供了定制，可以自己根据需求进行调整。比如页面包涵那些模块，模块的摆放位置等。&#xA;front matter的形式用&amp;quot;- - -&amp;ldquo;上下包涵，放在md文档的头部。</description>
    </item>
    <item>
      <title>申请github账户</title>
      <link>https://shilaAtGit.github.io.git/usegitbuildpages/applygithub/</link>
      <pubDate>Mon, 19 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://shilaAtGit.github.io.git/usegitbuildpages/applygithub/</guid>
      <description>介绍一下如何实现github的账户申请，以及在github上建立第一个仓库。 这个仓库后续要用来发布个人主页，个人主页的搭建可以参考我另外一篇文章。学习使用hugo笔记。&#xA;开篇语&#xA;github是不太稳定的，有的时候无法访问，如果个人愿意出钱，可以选择其他的云服务，比如阿里云、腾讯云、华为云等，这些付费的专业云可以获得比较好的用户体验。&#xA;本文主导的是免费的策略，顺带熟悉github的发布。&#xA;github之前被墙过，但是现在基本是允许访问的，一些教你翻墙、hosts设置代理等访问git的方式，可以先放弃了。如果后期github再次被墙了，需要寻找相应的访问办法。&#xA;申请github账号：&#xA;如果有账号直接登录就好了。&#xA;gitlab的平台界面和操作路径会更新，所以有的时候需要自己找一下操作位置。&#xA;访问gitlab，点击右上角的sign up。&#xA;然后填写注册信息就好了，注册信息很简单，包括email，用户名，口令。后续页面会收集其他信息，以及推荐选择付费版本，记住选择免费即可。&#xA;第一步：新建github仓库&#xA;1、登陆在gitlab，点击左侧的new按键，新建一个repository。&#xA;2、填写新的仓库的信息，注意不要修改任何信息，需要填写的只有Repository Name.&#xA;Name不能乱写，必须是.github.io，比如我的github的名字叫zhangsan123，Repository Name就是zhangsan123.github.io。&#xA;另外，不要因为前面就是owner，就不写owner了&#xA;就此，github仓库就创建好了，后面只需要将本地代码提交到这个仓库就可以了。</description>
    </item>
  </channel>
</rss>
